// ==========================================================================
// Foundation::Mixin
// ==========================================================================
@mixin sp {
  @media (max-width: 767px) {@content};
}

@mixin tb {
  @media (min-width: 768px){@content};
}

@mixin pc {
  @media (min-width: 993px){@content};
}

@mixin npc{
  @media (min-width: 993px) and (max-width: 1260px){@content};
}

@mixin wpc{
  @media (min-width: 1600px){@content};
}

@mixin clearfix($ie7: false, $type: micro) {
  @if ($ie7 == true) {
    *zoom: 1;
  }
  @if ($type == overflow) {
    overflow: hidden; /* Clearfix */
  } @else {
    &:before,
    &:after {
      content: "";
      display: table;
    }
    &:after {
      clear: both;
    }
  }
}

@mixin truncate($display: null, $max-width: 100%, $text-overflow: ellipsis){
  @if ($display) {
    display: $display;
  }
  max-width: $max-width;
  overflow: hidden;
  text-overflow: $text-overflow;
  white-space: nowrap;
}

@mixin wrap(){
  -ms-word-break: break-all;
  word-break: break-all; /* Be VERY careful with this, breaks normal words wh_erever */
  word-break: break-word;/* Non standard for webkit */
  word-wrap:break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

@mixin box() {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

@mixin border-radius($radius...) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin border-gloss($size) {
  border-top: solid $size $white;
}

@mixin box-shadow($value...) {
  -webkit-box-shadow: $value;
     -moz-box-shadow: $value;
      -ms-box-shadow: $value;
          box-shadow: $value;
}

@mixin opacity($opacity) {
   opacity: $opacity;
   $opacityIE: $opacity * 100;
   filter: alpha(opacity=$opacityIE);
}

@mixin circle($r) {
  @include border-radius($r);
  width: $r * 2;
  height: $r * 2;
}

@mixin animation($animation-name) {
  animation: $animation-name;
  -webkit-animation: $animation-name;
  -moz-animation: $animation-name;

  animation-fill-mode: both;
  -webkit-animation-fill-mode: both;
  -moz-animation-fill-mode: both;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin ellips() {
  display: inline-block;
  word-break: break-all;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin ellipsis($row: 1) {
  display: -webkit-box !important;
  display: -moz-box !important;
  word-wrap: break-word;
  word-break: break-all;
  max-width: 100%;
  -webkit-line-clamp: $row;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;

}

@mixin ellipsisAjaxSupport($row: 1) {
  display: -webkit-box;
  display: -moz-box;
  word-wrap: break-word;
  word-break: break-all;
  max-width: 100%;
  -webkit-line-clamp: $row;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;

}

@mixin fz($size: 14) {
  font-size: $size + px;
  font-size: ($size / 10)  + rem;
}
@mixin fzlb($size: 14) {
  font-size: $size + px;
  font-size: ($size / 10)  + rem;
  font-weight: 500;
}
@mixin fzb($size: 14) {
  font-size: $size + px;
  font-size: ($size / 10)  + rem;
  font-weight: bold;
}

@mixin placeholderColor($color) {
    &::-webkit-input-placeholder {
        color:$color;
    }
    &:-moz-placeholder {
        color:$color;
        opacity: 1;
    }
    &::-moz-placeholder {
        color:$color;
        opacity: 1;
    }
    &:-ms-input-placeholder {
        color:$color;
    }
}

@mixin placeholderCenter() {
    &::-webkit-input-placeholder {
        text-align: center;
    }
    &:-moz-placeholder {
        text-align: center;
    }
    &::-moz-placeholder {
        text-align: center;
    }
    &:-ms-input-placeholder {
        text-align: center;
    }
}

@mixin inner-border($thickness:1px, $color:white, $alpha:.1) {
          box-shadow: inset 0 0 0 $thickness rgba($color, $alpha);
     -moz-box-shadow: inset 0 0 0 $thickness rgba($color, $alpha);
      -ms-box-shadow: inset 0 0 0 $thickness rgba($color, $alpha);
          box-shadow: inset 0 0 0 $thickness rgba($color, $alpha);
}

@mixin selectbox() {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

@mixin blur($size) {
  -webkit-filter: blur($size);
  -ms-filter: blur($size);
  filter: blur($size);
}

@mixin cover(){
  -moz-background-size: cover;
  background-size: cover;
}

@mixin transition($time){
  -webkit-transition: $time;
  -moz-transition: $time;
  -o-transition: $time;
  transition: $time;
}

@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}

//responsive
$breakpoint-up: (
  'sm': 'screen and (min-width: 400px)',
  'md': 'screen and (min-width: 769px)',
  'lg': 'screen and (min-width: 1000px)',
  'xl': 'screen and (min-width: 1200px)',
) !default;

// max-width
$breakpoint-down: (
  'sm': 'screen and (max-width: 399px)',
  'md': 'screen and (max-width: 768px)',
  'lg': 'screen and (max-width: 999px)',
  'xl': 'screen and (max-width: 1199px)',
) !default;

// @mixinの定義
@mixin mq-up($breakpoint: md) {
  @media #{map-get($breakpoint-up, $breakpoint)} {
    @content;
  }
}

@mixin mq-down($breakpoint: md) {
  @media #{map-get($breakpoint-down, $breakpoint)} {
    @content;
  }
}
